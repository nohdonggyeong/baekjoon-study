10^8 = 100,000,000 = 1초 소요된다.
1초 안에 돌아가려면 풀이법을 고르고 코딩을 시작하자.

n <= 20이면 웬만한 저질 구현도 통과, 브루트 포스
n = 20이라면 O(2^n) = 1,048,576까지 가능
그 보다 큰 O(n!)은 n =10까지의 경우만 가능하다.

n <= 100이면 적당한 삼중 루프가 통과, 플로이드-와샬
n = 100이라면 O(n^3) = 1,000,000까지 가능

n <= 1,000이면 적당한 이중 루프가 통과, 벨만 포드
n = 1,000이라면 O(n^2) = 1,000,000까지 가능

n <= 10,000이면 머리 좀 써야 한다. 동적 프로그래밍, 이분 탐색, 다익스트라, 유니언 파인드, 세그먼트 트리, 투 포인터
n = 10,000이라면 O(n) = 10,000, O(nlogn) = 40,000까지 가능

n <= 10^8이면 수학적 기믹이 필요하다. 유클리드의 호제법
n = 100,000,000이라면 O(longn) = 8까지 가능